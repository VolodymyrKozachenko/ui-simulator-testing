{"num_tests": 15, "num_failures": 2, "num_skipped": 0, "test_cases": [{"name": "test_data_validation[11-Valid]", "result": "pass", "details": "", "time": 7.597}, {"name": "test_data_validation[9-Not in range]", "result": "pass", "details": "", "time": 6.031}, {"name": "test_data_validation[11.5-Not an integer]", "result": "pass", "details": "", "time": 6.196}, {"name": "test_data_validation[-11-Negative integer]", "result": "pass", "details": "", "time": 6.158}, {"name": "test_data_validation[-11.5-Negative number]", "result": "pass", "details": "", "time": 6.998}, {"name": "test_data_validation[hello-Not a number]", "result": "pass", "details": "", "time": 6.225}, {"name": "test_select_elements", "result": "fail", "details": "hover_and_select = <pages.hover_and_select.HoverAndSelect object at 0x000002A1FE9EE5E0>\n\n    def test_select_elements(hover_and_select):\n        hover_and_select.hover_on_button()\n>       hover_and_select.select_elements()\nE       AttributeError: 'HoverAndSelect' object has no attribute 'select_elements'\n\ntests\\test_hover_and_select.py:6: AttributeError", "time": 4.368}, {"name": "test_select_elements", "result": "pass", "details": "", "time": 18.596}, {"name": "test_login_error_message[-$(password)-Username field cannot be empty]", "result": "pass", "details": "", "time": 6.096}, {"name": "test_login_error_message[$(login)--Password field cannot be empty]", "result": "pass", "details": "", "time": 6.289}, {"name": "test_login_error_message[incorrect_username-$(password)-Password or username is incorrect]", "result": "pass", "details": "", "time": 6.025}, {"name": "test_login_error_message[$(login)-incorrect_password-Password or username is incorrect]", "result": "pass", "details": "", "time": 6.545}, {"name": "test_success_login", "result": "fail", "details": "index_page = <pages.index_page.IndexPage object at 0x000002A1FED10CA0>\n\n    @allure.description('success login with correct creds')\n    @allure.label('owner', 'Vova')\n    @allure.title('success login')\n    @allure.suite('Auhtorization')\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_success_login(index_page):\n        index_page.enter_username(LOGIN)\n        index_page.enter_password(PASSWORD)\n        index_page.click_to_login_button()\n>       index_page.validate_login()\n\ntests\\test_index_page.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\index_page.py:28: in validate_login\n    self.assert_equal(\"Log out\", self.get_text(self.LOGOUT_BTN))\nbase_object\\base.py:48: in get_text\n    return self.is_visible(locator).text\nbase_object\\base.py:24: in is_visible\n    return self.wait.until(ec.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ce6a782ce7db3644914bb08e8b08b5fe\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002A1FEA23790>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00254DE3+43907]\nE       \t(No symbol) [0x001E0741]\nE       \t(No symbol) [0x000D33ED]\nE       \t(No symbol) [0x00106760]\nE       \t(No symbol) [0x00106C2B]\nE       \t(No symbol) [0x00136F62]\nE       \t(No symbol) [0x00122BA4]\nE       \t(No symbol) [0x001355CA]\nE       \t(No symbol) [0x00122956]\nE       \t(No symbol) [0x000FE17E]\nE       \t(No symbol) [0x000FF32D]\nE       \tGetHandleVerifier [0x00505AF9+2865305]\nE       \tGetHandleVerifier [0x0054E78B+3163435]\nE       \tGetHandleVerifier [0x00548441+3138017]\nE       \tGetHandleVerifier [0x002DE0F0+605840]\nE       \t(No symbol) [0x001EA64C]\nE       \t(No symbol) [0x001E6638]\nE       \t(No symbol) [0x001E675F]\nE       \t(No symbol) [0x001D8DB7]\nE       \tBaseThreadInitThunk [0x763A7BA9+25]\nE       \tRtlInitializeExceptionChain [0x77A1BD3B+107]\nE       \tRtlClearBits [0x77A1BCBF+191]\nE       \t(No symbol) [0x00000000]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException", "time": 8.986}, {"name": "test_success_login", "result": "pass", "details": "", "time": 18.461}, {"name": "test_add_data", "result": "pass", "details": "", "time": 6.068}], "total_time": 170.459}